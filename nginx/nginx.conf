# User and worker configurations
user nginx;
worker_processes auto;
pid /run/nginx.pid;

# Events configuration
events {
    worker_connections 1024;
}

# HTTP configurations
http {
    # Load MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Load balancing for backend servers
    upstream backend {
        server backend1.example.com weight=1;
        server backend2.example.com weight=1;
        server backend3.example.com weight=1;
    }

    # Load balancing for frontend servers
    upstream frontend {
        server frontend1.example.com weight=1;
        server frontend2.example.com weight=1;
        server frontend3.example.com weight=1;
    }

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Frontend server block
    server {
        listen 443 ssl;
        server_name frontend.example.com;

        ssl_certificate /etc/nginx/ssl/frontend.crt;
        ssl_certificate_key /etc/nginx/ssl/frontend.key;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Backend server block
    server {
        listen 443 ssl;
        server_name backend.example.com;

        ssl_certificate /etc/nginx/ssl/backend.crt;
        ssl_certificate_key /etc/nginx/ssl/backend.key;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTP to HTTPS redirection for frontend
    server {
        listen 80;
        server_name frontend.example.com;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTP to HTTPS redirection for backend
    server {
        listen 80;
        server_name backend.example.com;

        location / {
            return 301 https://$host$request_uri;
        }
    }
}
